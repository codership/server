--source include/galera_cluster.inc

--connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1


#
# Test A: BF abort XA transaction
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;

XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');

--connection node_2
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;

--connection node_1a
# sync wait
SELECT * FROM t1;

--connection node_1
--error ER_LOCK_DEADLOCK
SELECT * FROM t1;

--error ER_XA_RBDEADLOCK
XA END 'test';
XA ROLLBACK 'test';

--echo expect (1, node2)
SELECT * FROM t1;

DROP TABLE t1;


#
# Test B: BF abort XA transaction on XA END
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;

XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');

--connection node_2
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;

--connection node_1a
# sync wait
SELECT * FROM t1;

--connection node_1
--error ER_XA_RBDEADLOCK
XA END 'test';
XA ROLLBACK 'test';

--echo expect (1, node2)
SELECT * FROM t1;

DROP TABLE t1;


#
# Test C: BF abort XA transaction on XA PREPARE
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;

XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');
XA END 'test';

--connection node_2
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;

--connection node_1a
# sync wait
SELECT * FROM t1;

--connection node_1
--error ER_XA_RBDEADLOCK
XA PREPARE 'test';
XA ROLLBACK 'test';

--echo expect (1, node2)
SELECT * FROM t1;

DROP TABLE t1;


#
# Test D: Attempt XA COMMIT after BF abort
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;

XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');
XA END 'test';

--connection node_2
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;

--connection node_1a
# sync wait
SELECT * FROM t1;

--connection node_1
--error ER_XA_RBDEADLOCK
XA PREPARE 'test';
--error ER_XA_RBDEADLOCK
XA COMMIT 'test';

--echo expect (1, node2)
SELECT * FROM t1;

DROP TABLE t1;


#
# Test E: XA BF aborted by another XA
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;

XA START 't1';
INSERT INTO t1 VALUES (1, 'node1');

--connection node_2
XA START 't2';
INSERT INTO t1 VALUES (1, 'node2');
XA END 't2';
XA PREPARE 't2';

--connection node_1a
# sync wait
SELECT * FROM t1;

--connection node_1
--error ER_LOCK_DEADLOCK
SELECT * FROM t1;

--error ER_XA_RBDEADLOCK
XA END 't1';
XA ROLLBACK 't1';

--connection node_1
--echo expect 't2'
XA RECOVER;

--connection node_2
XA COMMIT 't2';

--echo expect (1, node2)
SELECT * FROM t1;

DROP TABLE t1;


#
# Test F: BF abort 'empty' XA transaction
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1, 'a');

XA START 't1';
--error ER_DUP_ENTRY
INSERT INTO t1 VALUES (1, 'node1');

--connection node_2
UPDATE t1 SET f2 = 'node2' WHERE f1 = 1;

--connection node_1
--error ER_XA_RBDEADLOCK
XA END 't1';
XA ROLLBACK 't1';

DROP TABLE t1;


#
# Test G: Attempt to continue transaction after BF abort
#

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY);
XA START 't';
INSERT INTO t1 VALUES (1);

--connection node_2
INSERT INTO t1 VALUES (1);

--connection node_1
--error ER_LOCK_DEADLOCK
INSERT INTO t1 VALUES (2);

--error ER_LOCK_DEADLOCK
INSERT INTO t1 VALUES (3);

--error ER_XA_RBDEADLOCK
XA END 't';

--error ER_XA_RBDEADLOCK
XA PREPARE 't';

--error ER_XA_RBDEADLOCK
XA COMMIT 't';

SELECT * FROM t1;

# Check that 't' was cleaned up properly
XA START 't';
INSERT INTO t1 VALUES (10);
XA END 't';
XA PREPARE 't';
XA COMMIT 't';

DROP TABLE t1;
