connection node_2;
connection node_1;
connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');
connection node_2;
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;
f1	f2
1	node2
connection node_1a;
SELECT * FROM t1;
f1	f2
1	node2
connection node_1;
SELECT * FROM t1;
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
XA END 'test';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA ROLLBACK 'test';
expect (1, node2)
SELECT * FROM t1;
f1	f2
1	node2
DROP TABLE t1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');
connection node_2;
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;
f1	f2
1	node2
connection node_1a;
SELECT * FROM t1;
f1	f2
1	node2
connection node_1;
XA END 'test';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA ROLLBACK 'test';
expect (1, node2)
SELECT * FROM t1;
f1	f2
1	node2
DROP TABLE t1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');
XA END 'test';
connection node_2;
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;
f1	f2
1	node2
connection node_1a;
SELECT * FROM t1;
f1	f2
1	node2
connection node_1;
XA PREPARE 'test';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA ROLLBACK 'test';
expect (1, node2)
SELECT * FROM t1;
f1	f2
1	node2
DROP TABLE t1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
XA START 'test';
INSERT INTO t1 VALUES (1, 'node1');
XA END 'test';
connection node_2;
INSERT INTO t1 VALUES (1, 'node2');
SELECT * FROM t1;
f1	f2
1	node2
connection node_1a;
SELECT * FROM t1;
f1	f2
1	node2
connection node_1;
XA PREPARE 'test';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA COMMIT 'test';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
expect (1, node2)
SELECT * FROM t1;
f1	f2
1	node2
DROP TABLE t1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
XA START 't1';
INSERT INTO t1 VALUES (1, 'node1');
connection node_2;
XA START 't2';
INSERT INTO t1 VALUES (1, 'node2');
XA END 't2';
XA PREPARE 't2';
connection node_1a;
SELECT * FROM t1;
f1	f2
connection node_1;
SELECT * FROM t1;
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
XA END 't1';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA ROLLBACK 't1';
connection node_1;
expect 't2'
XA RECOVER;
formatID	gtrid_length	bqual_length	data
1	2	0	t2
connection node_2;
XA COMMIT 't2';
expect (1, node2)
SELECT * FROM t1;
f1	f2
1	node2
DROP TABLE t1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(64)) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1, 'a');
XA START 't1';
INSERT INTO t1 VALUES (1, 'node1');
ERROR 23000: Duplicate entry '1' for key 'PRIMARY'
connection node_2;
UPDATE t1 SET f2 = 'node2' WHERE f1 = 1;
connection node_1;
XA END 't1';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA ROLLBACK 't1';
DROP TABLE t1;
connection node_1;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY);
XA START 't';
INSERT INTO t1 VALUES (1);
connection node_2;
INSERT INTO t1 VALUES (1);
connection node_1;
INSERT INTO t1 VALUES (2);
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
INSERT INTO t1 VALUES (3);
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
XA END 't';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA PREPARE 't';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
XA COMMIT 't';
ERROR XA102: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
SELECT * FROM t1;
f1
1
XA START 't';
INSERT INTO t1 VALUES (10);
XA END 't';
XA PREPARE 't';
XA COMMIT 't';
DROP TABLE t1;
